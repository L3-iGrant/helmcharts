services:
  vault:
    image: ${VAULT_IMAGE:-hashicorp/vault:latest}
    container_name: ${VAULT_CONTAINER_NAME:-vault}
    restart: unless-stopped
    ports:
      - "${VAULT_PORT:-8200}:8200"
    environment:
      VAULT_ADDR: "${VAULT_ADDR:-http://0.0.0.0:8200}"
      VAULT_API_ADDR: "${VAULT_API_ADDR:-http://0.0.0.0:8200}"
    volumes:
      - vault-data:/vault/file
      - ./resources/config/vault.json:/vault/config/vault.json
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json

  securevault:
    image: ${SECUREVAULT_IMAGE:-europe-docker.pkg.dev/jenkins-189019/igrantio/securevault:2025.2.4}
    container_name: ${SECUREVAULT_CONTAINER_NAME:-securevault}
    restart: unless-stopped
    depends_on:
      - vault
    ports:
      - "${SECUREVAULT_PORT:-8081}:8080"
    environment:
      VAULT_ADDR: "http://${VAULT_CONTAINER_NAME:-vault}:${VAULT_PORT:-8200}"
      VAULT_USER: "${VAULT_USER:-admin}"
      VAULT_PASSWORD: "${VAULT_PASSWORD:-admin}"

  mongo:
    build:
      context: ./resources/docker/development
      dockerfile: Dockerfile
    container_name: ${MONGODB_CONTAINER_NAME:-mongo}
    environment:
      MONGODB_APPLICATION_DATABASE: ${MONGODB_DATABASE:-igrant-consentdb}
      MONGODB_APPLICATION_USER: ${MONGODB_USER:-igrant-user}
      MONGODB_APPLICATION_PASSWORD: ${MONGODB_PASSWORD:-igrant-password}
    volumes:
      - mongo-datadir:/data/db
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    restart: unless-stopped

  postgresql:
    build:
      context: ./resources/docker/postgres
      dockerfile: Dockerfile
    container_name: ${POSTGRESQL_CONTAINER_NAME:-postgresql}
    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME:-bn_keycloak}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD:-bn_keycloak}
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE:-bitnami_keycloak}
      MULTIPLE_DATABASES: ${MULTIPLE_DATABASES:-eudiwalletdb}
    volumes:
      - postgresql-datadir:/bitnami/postgresql
    ports:
      - "${POSTGRESQL_PORT:-5442}:5432"
    restart: unless-stopped

  keycloak:
    image: ${KEYCLOAK_IMAGE:-bitnami/keycloak:12.0.4-debian-10-r1}
    container_name: ${KEYCLOAK_CONTAINER_NAME:-keycloak}
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER:-keycloak}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD:-j3ckN4914IOK}
      KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD:-bn_keycloak}
    ports:
      - "${KEYCLOAK_PORT:-8082}:8080"
    depends_on:
      - postgresql

  api:
    image: ${API_IMAGE:-europe-docker.pkg.dev/jenkins-189019/igrantio/api:2025.2.4}
    container_name: ${API_CONTAINER_NAME:-api}
    restart: unless-stopped
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      RUN_LOCALLY_WITHOUT_CONTAINERS: ${RUN_LOCALLY_WITHOUT_CONTAINERS:-true}
      MONGODB_CONTAINER_NAME: ${MONGODB_CONTAINER_NAME:-mongo}
      MONGODB_PORT: ${MONGODB_PORT:-27017}
      KEYCLOAK_CONTAINER_NAME: ${KEYCLOAK_CONTAINER_NAME:-keycloak}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT:-8082}
    volumes:
      - ./resources/config/:/opt/l3-igrant/api/config/:ro
      - ./resources/config/:/resources/config/:ro
      - ./resources/assets/:/opt/l3-igrant/api/assets/:ro
      - ./resources/assets/:/resources/assets/:ro
    depends_on:
      - mongo
      - keycloak

  webhook:
    image: ${WEBHOOK_IMAGE:-europe-docker.pkg.dev/jenkins-189019/igrantio/api:2025.2.4}
    container_name: ${WEBHOOK_CONTAINER_NAME:-webhook}
    restart: unless-stopped
    ports:
      - "${WEBHOOK_PORT:-8085}:8085"
    volumes:
      - ./resources/config/:/opt/l3-igrant/api/config/:ro
      - ./resources/assets/:/opt/l3-igrant/api/assets/:ro
    depends_on:
      - mongo

  owconfig:
    image: ${OWCONFIG_IMAGE:-europe-docker.pkg.dev/jenkins-189019/igrantio/organisationwallet:2025.2.4}
    container_name: ${OWCONFIG_CONTAINER_NAME:-owconfig}
    environment:
      SECURE_VAULT_BASE_URL: ${SECURE_VAULT_BASE_URL:-http://securevault:8080}
      ROUTE_PERMITTED: ${ROUTE_PERMITTED:-config}
      DOMAIN: ${DOMAIN:-https://ow.igrant.io}
      DATABASE_USER: ${DATABASE_USER:-bn_keycloak}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-bn_keycloak}
      DATABASE_HOST: ${DATABASE_HOST:-postgresql}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_DB: ${DATABASE_DB:-eudiwalletdb}
      EBSI_BASE_URL: ${EBSI_BASE_URL:-https://api-pilot.ebsi.eu}
      WALLET_UNIT_PRODUCTION_CHECKS_ENABLED: ${WALLET_UNIT_PRODUCTION_CHECKS_ENABLED:-"true"}
      WALLET_PROVIDER_BASE_URL: ${WALLET_PROVIDER_BASE_URL:-https://ow.igrant.io/organisation/2bd50451-ad41-4836-ad24-4f12194af215/service}
    restart: unless-stopped
    ports:
      - "${OWCONFIG_PORT:-8090}:8080"
    depends_on:
      - postgresql

  owservice:
    image: ${OWSERVICE_IMAGE:-europe-docker.pkg.dev/jenkins-189019/igrantio/organisationwallet:2025.2.4}
    container_name: ${OWSERVICE_CONTAINER_NAME:-owservice}
    environment:
      SECURE_VAULT_BASE_URL: ${SECURE_VAULT_BASE_URL:-http://securevault:8080}
      ROUTE_PERMITTED: ${ROUTE_PERMITTED:-service}
      DOMAIN: ${DOMAIN:-https://ow.igrant.io}
      DATABASE_USER: ${DATABASE_USER:-bn_keycloak}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-bn_keycloak}
      DATABASE_HOST: ${DATABASE_HOST:-postgresql}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_DB: ${DATABASE_DB:-eudiwalletdb}
      EBSI_BASE_URL: ${EBSI_BASE_URL:-https://api-pilot.ebsi.eu}
      WALLET_UNIT_PRODUCTION_CHECKS_ENABLED: ${WALLET_UNIT_PRODUCTION_CHECKS_ENABLED:-"true"}
      WALLET_PROVIDER_BASE_URL: ${WALLET_PROVIDER_BASE_URL:-https://ow.igrant.io/organisation/2bd50451-ad41-4836-ad24-4f12194af215/service}
    restart: unless-stopped
    ports:
      - "${OWSERVICE_PORT:-9090}:8080"
    depends_on:
      - postgresql

volumes:
  mongo-datadir:
    name: ${MONGODB_VOLUME_NAME:-mongo-datadir}
  postgresql-datadir:
    name: ${POSTGRESQL_VOLUME_NAME:-postgresql-datadir}
  vault-data:
    name: ${VAULT_VOLUME_NAME:-vault-data}